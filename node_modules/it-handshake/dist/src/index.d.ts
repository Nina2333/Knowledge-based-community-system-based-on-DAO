import { Reader } from 'it-reader';
import type { Duplex, Source } from 'it-stream-types';
import type { Pushable } from 'it-pushable';
import type { Uint8ArrayList } from 'uint8arraylist';
export interface Handshake<TSink = Uint8Array | Uint8ArrayList> {
    reader: Reader;
    writer: Pushable<TSink>;
    stream: Duplex<Uint8ArrayList, TSink>;
    rest: () => Source<TSink>;
    write: (data: TSink) => void;
    read: () => Promise<Uint8ArrayList | undefined>;
}
export declare function handshake<TSink extends Uint8ArrayList | Uint8Array = Uint8ArrayList>(stream: Duplex<Uint8ArrayList | Uint8Array, TSink>): Handshake<TSink>;
//# sourceMappingURL=index.d.ts.map