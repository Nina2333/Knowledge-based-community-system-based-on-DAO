(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2PTopology = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var Libp2PTopology=(()=>{var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var a=(t,o)=>{for(var e in o)r(t,e,{get:o[e],enumerable:!0})},m=(t,o,e,i)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of p(o))!y.call(t,n)&&n!==e&&r(t,n,{get:()=>o[n],enumerable:!(i=g(o,n))||i.enumerable});return t};var u=t=>m(r({},"__esModule",{value:!0}),t);var b={};a(b,{createTopology:()=>S});var s=Symbol.for("@libp2p/topology");var l=()=>{},c=class{constructor(o){this.min=o.min??0,this.max=o.max??1/0,this.peers=new Set,this.onConnect=o.onConnect??l,this.onDisconnect=o.onDisconnect??l}get[Symbol.toStringTag](){return s.toString()}get[s](){return!0}async setRegistrar(o){this.registrar=o}disconnect(o){this.onDisconnect(o)}};function S(t){return new c(t)}return u(b);})();
return Libp2PTopology}));
