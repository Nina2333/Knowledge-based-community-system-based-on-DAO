/**
 * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions
 */
export class DHTDatastore {
    /**
     *
     * @param {import('@libp2p/interface-dht').DHT} dht
     */
    constructor(dht: import('@libp2p/interface-dht').DHT);
    _dht: import("@libp2p/interface-dht").DHT;
    /**
     * @param {Uint8Array} key - identifier of the value.
     * @param {Uint8Array} value - value to be stored.
     * @param {AbortOptions} [options]
     */
    put(key: Uint8Array, value: Uint8Array, options?: import("@libp2p/interfaces").AbortOptions | undefined): Promise<void>;
    /**
     * @param {Uint8Array} key - identifier of the value to be obtained.
     * @param {AbortOptions} [options]
     */
    get(key: Uint8Array, options?: import("@libp2p/interfaces").AbortOptions | undefined): Promise<Uint8Array>;
}
export type AbortOptions = import('@libp2p/interfaces').AbortOptions;
//# sourceMappingURL=dht-datastore.d.ts.map