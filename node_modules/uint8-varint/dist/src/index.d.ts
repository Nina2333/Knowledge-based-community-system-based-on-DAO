import type { Uint8ArrayList } from 'uint8arraylist';
interface VarintCodec {
    encodingLength: (value: number) => number;
    encode: ((value: number) => Uint8Array) & ((value: number, buf: Uint8Array, offset?: number) => Uint8Array) & ((value: number, buf: Uint8ArrayList, offset?: number) => Uint8ArrayList);
    decode: (buf: Uint8ArrayList | Uint8Array, offset?: number) => number;
}
export declare const unsigned: VarintCodec;
export declare const signed: VarintCodec;
export declare const zigzag: VarintCodec;
export {};
//# sourceMappingURL=index.d.ts.map