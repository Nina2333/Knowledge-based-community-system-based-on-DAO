import type { PeerDiscovery } from '@libp2p/interface-peer-discovery';
import type { PeerStore } from '@libp2p/interface-peer-store';
export interface BootstrapInit {
    /**
     * The list of peer addresses in multi-address format
     */
    list: string[];
    /**
     * How long to wait before discovering bootstrap nodes
     */
    timeout?: number;
    /**
     * Tag a bootstrap peer with this name before "discovering" it (default: 'bootstrap')
     */
    tagName?: string;
    /**
     * The bootstrap peer tag will have this value (default: 50)
     */
    tagValue?: number;
    /**
     * Cause the bootstrap peer tag to be removed after this number of ms (default: 2 minutes)
     */
    tagTTL?: number;
}
export interface BootstrapComponents {
    peerStore: PeerStore;
}
export declare function bootstrap(init: BootstrapInit): (components: BootstrapComponents) => PeerDiscovery;
//# sourceMappingURL=index.d.ts.map