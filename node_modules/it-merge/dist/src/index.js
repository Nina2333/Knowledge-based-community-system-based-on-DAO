import { pushable } from 'it-pushable';
/**
 * Treat one or more iterables as a single iterable.
 *
 * Nb. sources are iterated over in parallel so the
 * order of emitted items is not guaranteed.
 */
export default async function* merge(...sources) {
    const output = pushable({
        objectMode: true
    });
    void Promise.resolve().then(async () => {
        try {
            await Promise.all(sources.map(async (source) => {
                for await (const item of source) {
                    output.push(item);
                }
            }));
            output.end();
        }
        catch (err) {
            output.end(err);
        }
    });
    yield* output;
}
//# sourceMappingURL=index.js.map