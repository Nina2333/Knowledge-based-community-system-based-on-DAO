import { CircuitRelay as CircuitPB } from '../pb/index.js';
import { StreamHandler } from './stream-handler.js';
import type { Connection } from '@libp2p/interface-connection';
import type { Duplex } from 'it-stream-types';
import type { AbortOptions } from '@libp2p/interfaces';
import type { Uint8ArrayList } from 'uint8arraylist';
export interface HandleStopOptions {
    connection: Connection;
    request: CircuitPB;
    streamHandler: StreamHandler;
}
/**
 * Handles incoming STOP requests
 */
export declare function handleStop(options: HandleStopOptions): Duplex<Uint8ArrayList, Uint8ArrayList | Uint8Array> | undefined;
export interface StopOptions extends AbortOptions {
    connection: Connection;
    request: CircuitPB;
}
/**
 * Creates a STOP request
 */
export declare function stop(options: StopOptions): Promise<Duplex<Uint8ArrayList, Uint8Array | Uint8ArrayList, Promise<void>> | undefined>;
//# sourceMappingURL=stop.d.ts.map