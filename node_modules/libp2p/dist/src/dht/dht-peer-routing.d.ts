import type { PeerRouting } from '@libp2p/interface-peer-routing';
import type { DHT } from '@libp2p/interface-dht';
import type { PeerId } from '@libp2p/interface-peer-id';
import type { AbortOptions } from '@libp2p/interfaces';
/**
 * Wrapper class to convert events into returned values
 */
export declare class DHTPeerRouting implements PeerRouting {
    private readonly dht;
    constructor(dht: DHT);
    findPeer(peerId: PeerId, options?: AbortOptions): Promise<import("@libp2p/interface-peer-info").PeerInfo>;
    getClosestPeers(key: Uint8Array, options?: AbortOptions): AsyncGenerator<import("@libp2p/interface-peer-info").PeerInfo, void, unknown>;
}
//# sourceMappingURL=dht-peer-routing.d.ts.map