import type { Uint8ArrayList } from 'uint8arraylist';
interface BigVarintCodec {
    encodingLength: (value: bigint) => number;
    encode: ((value: bigint) => Uint8Array) & ((value: bigint, buf: Uint8Array, offset?: number) => Uint8Array) & ((value: bigint, buf: Uint8ArrayList, offset?: number) => Uint8ArrayList);
    decode: (buf: Uint8ArrayList | Uint8Array, offset?: number) => bigint;
}
export declare const unsigned: BigVarintCodec;
export declare const signed: BigVarintCodec;
export declare const zigzag: BigVarintCodec;
export {};
//# sourceMappingURL=big.d.ts.map