import type { DHT } from '@libp2p/interface-dht';
import type { ContentRouting } from '@libp2p/interface-content-routing';
import type { CID } from 'multiformats/cid';
import type { AbortOptions } from '@libp2p/interfaces';
/**
 * Wrapper class to convert events into returned values
 */
export declare class DHTContentRouting implements ContentRouting {
    private readonly dht;
    constructor(dht: DHT);
    provide(cid: CID): Promise<void>;
    findProviders(cid: CID, options?: AbortOptions): AsyncGenerator<import("@libp2p/interface-peer-info").PeerInfo, void, undefined>;
    put(key: Uint8Array, value: Uint8Array, options?: AbortOptions): Promise<void>;
    get(key: Uint8Array, options?: AbortOptions): Promise<Uint8Array>;
}
//# sourceMappingURL=dht-content-routing.d.ts.map