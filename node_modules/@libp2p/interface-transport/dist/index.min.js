(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2PInterfaceTransport = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var Libp2PInterfaceTransport=(()=>{var L=Object.defineProperty;var i=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var b=Object.prototype.hasOwnProperty;var f=(o,A)=>{for(var r in A)L(o,r,{get:A[r],enumerable:!0})},x=(o,A,r,t)=>{if(A&&typeof A=="object"||typeof A=="function")for(let n of _(A))!b.call(o,n)&&n!==r&&L(o,n,{get:()=>A[n],enumerable:!(t=i(A,n))||t.enumerable});return o};var T=o=>x(L({},"__esModule",{value:!0}),o);var m={};f(m,{FaultTolerance:()=>p,isTransport:()=>l,symbol:()=>s});var s=Symbol.for("@libp2p/transport");function l(o){return o!=null&&!!o[s]}var p;(function(o){o[o.FATAL_ALL=0]="FATAL_ALL",o[o.NO_FATAL=1]="NO_FATAL"})(p||(p={}));return T(m);})();
return Libp2PInterfaceTransport}));
