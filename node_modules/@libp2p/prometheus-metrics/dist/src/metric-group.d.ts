import type { CalculateMetric, MetricGroup, StopTimer } from '@libp2p/interface-metrics';
import type { PrometheusCalculatedMetricOptions } from './index.js';
import { CalculatedMetric } from './utils.js';
export declare class PrometheusMetricGroup implements MetricGroup, CalculatedMetric<Record<string, number>> {
    private readonly gauge;
    private readonly label;
    private readonly calculators;
    constructor(name: string, opts: PrometheusCalculatedMetricOptions<Record<string, number>>);
    addCalculator(calculator: CalculateMetric<Record<string, number>>): void;
    update(values: Record<string, number>): void;
    increment(values: Record<string, number | unknown>): void;
    decrement(values: Record<string, number | unknown>): void;
    reset(): void;
    timer(key: string): StopTimer;
}
//# sourceMappingURL=metric-group.d.ts.map