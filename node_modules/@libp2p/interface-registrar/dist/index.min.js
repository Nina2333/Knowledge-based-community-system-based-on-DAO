(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2PInterfaceRegistrar = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var Libp2PInterfaceRegistrar=(()=>{var t=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var e=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var i=(o,l)=>{for(var n in l)t(o,n,{get:l[n],enumerable:!0})},u=(o,l,n,y)=>{if(l&&typeof l=="object"||typeof l=="function")for(let p of e(l))!g.call(o,p)&&p!==n&&t(o,p,{get:()=>l[p],enumerable:!(y=b(l,p))||y.enumerable});return o};var c=o=>u(t({},"__esModule",{value:!0}),o);var m={};i(m,{isTopology:()=>f,topologySymbol:()=>r});var r=Symbol.for("@libp2p/topology");function f(o){return o!=null&&!!o[r]}return c(m);})();
return Libp2PInterfaceRegistrar}));
