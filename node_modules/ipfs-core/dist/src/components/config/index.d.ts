/**
 * @param {object} config
 * @param {import('ipfs-repo').IPFSRepo} config.repo
 */
export function createConfig({ repo }: {
    repo: import('ipfs-repo').IPFSRepo;
}): {
    getAll: (options?: import("ipfs-core-types").AbortOptions | undefined) => Promise<import("ipfs-core-types/src/config").Config>;
    get: (key: string, options?: import("ipfs-core-types").AbortOptions | undefined) => Promise<string | object>;
    set: (key: string, value: any, options?: import("ipfs-core-types").AbortOptions | undefined) => Promise<void>;
    replace: (config: import("ipfs-core-types/src/config").Config, options?: import("ipfs-core-types").AbortOptions | undefined) => Promise<void>;
    profiles: {
        apply: (name: string, options?: import("ipfs-core-types/src/config/profiles").ProfilesApplyOptions | undefined) => Promise<import("ipfs-core-types/src/config/profiles").ProfilesApplyResult>;
        list: (options?: import("ipfs-core-types").AbortOptions | undefined) => Promise<import("ipfs-core-types/src/config/profiles").Profile[]>;
    };
};
//# sourceMappingURL=index.d.ts.map